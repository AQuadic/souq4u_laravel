## Autogenerated by Scribe. DO NOT MODIFY.

name: Orders
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get User Orders.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      pagination:
        name: pagination
        description: simple/normal/none.
        required: false
        example: simple
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Count of items max(50).'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      pagination: simple
      per_page: 50
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders/items
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders/checkout
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Checkout Order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      session_id:
        name: session_id
        description: 'Must be at least 5 characters. Must not be greater than 191 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      payment_method:
        name: payment_method
        description: ''
        required: false
        example: both
        type: string
        enumValues:
          - cash
          - card
          - both
        exampleWasSpecified: false
        nullable: true
        custom: []
      user_name:
        name: user_name
        description: 'Must be at least 3 characters. Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must be at least 3 characters. Must not be greater than 191 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'Must not be greater than 255 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'This field is required when <code>phone</code> is present. Must not be greater than 255 characters.'
        required: false
        example: d
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      coupon_code:
        name: coupon_code
        description: 'Must be at least 0 characters. Must not be greater than 191 characters.'
        required: false
        example: l
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: PreOrder
        type: string
        enumValues:
          - PreOrder
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].itemable_id':
        name: 'items[].itemable_id'
        description: 'Must be at least 1.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].itemable_type':
        name: 'items[].itemable_type'
        description: 'Must be at least 3 characters. Must not be greater than 50 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 1.'
        required: false
        example: 35
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      session_id: b
      payment_method: both
      user_name: 'n'
      email: ashly64@example.com
      phone: v
      phone_country: d
      coupon_code: l
      status: PreOrder
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders/pay
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'The <code>id</code> of an existing record in the orders table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gateway:
        name: gateway
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order_id: 16
      gateway: architecto
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"message":"The selected order id is invalid.","errors":{"order_id":["The selected order id is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '10'
          x-ratelimit-remaining: '9'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/{type}/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Single Order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: id|code|tracking_number
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the {type}.'
        required: true
        example: '564'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: id|code|tracking_number
      id: '564'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/orders/id|code|tracking_number/564 could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders/cancel
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancel Order.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'The <code>id</code> of an existing record in the orders table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order_id: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/amazon_pay_callback/{id}'
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the amazon pay callback.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders/track
    metadata:
      groupName: Orders
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order_id:
        name: order_id
        description: 'The <code>id</code> of an existing record in the orders table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      latitude:
        name: latitude
        description: 'Must be between -90 and 90.'
        required: true
        example: -89
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      longitude:
        name: longitude
        description: 'Must be between -180 and 180.'
        required: true
        example: -180
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      order_id: architecto
      latitude: -89
      longitude: -180
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
