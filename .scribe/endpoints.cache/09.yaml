## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/notification
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'Get Notifications.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'type of app (delivery/user/restaurant/shop).'
        required: false
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: user
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: |-
          {
              "message": ""
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notification/read
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'Mark Notifications as Read'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/notification/unread
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'unMark Notifications as Read'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/notification/read/{notification_id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'Read Single Notification'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notification_id:
        name: notification_id
        description: 'The ID of the notification.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notification_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/notification/unread/{notification_id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'unRead Single Notification'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notification_id:
        name: notification_id
        description: 'The ID of the notification.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notification_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/notification/{notification_id}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'delete Single Notification'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      notification_id:
        name: notification_id
        description: 'The ID of the notification.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      notification_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/notification
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Notifications
      subgroupDescription: ''
      title: 'delete Single Notification'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/login
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Continue Authentication.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'string Name User.'
        required: false
        example: 'AQuadic User'
        type: optional
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'string Password of User.'
        required: false
        example: password
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'string Password of User.'
        required: false
        example: password
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      name: 'AQuadic User'
      password: password
      password_confirmation: password
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/signup
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Sign up new Account'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'string Name User.'
        required: false
        example: 'AQuadic User'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 5000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      country_id:
        name: country_id
        description: 'The <code>id</code> of an existing record in the countries table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city_id:
        name: city_id
        description: 'The <code>id</code> of an existing record in the cities table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'string Password of User.'
        required: false
        example: password
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'string Password of User.'
        required: false
        example: password
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'AQuadic User'
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      password: password
      password_confirmation: password
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/firebase
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Firebase Authenticate.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      provider:
        name: provider
        description: 'Provider of User.'
        required: true
        example: FIREBASE
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      access_token:
        name: access_token
        description: 'Access Token (ID TOKEN) of User.'
        required: true
        example: TOKEN
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      provider: FIREBASE
      access_token: TOKEN
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/social
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Social Media Authentication.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      provider:
        name: provider
        description: 'Providing the service(apple/google/facebook/twitter).'
        required: true
        example: facebook
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      access_token:
        name: access_token
        description: 'Access token provided by service.'
        required: true
        example: XXXXXX
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      access_secret:
        name: access_secret
        description: 'nullable Secret token provided by service only in twitter.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      provider: facebook
      access_token: XXXXXX
      access_secret: null
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/verify
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Verify User Account.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: 'required_without:phone'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: 'required_without:email'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: 'required_with:phone'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'string OTP Code to Validate.'
        required: false
        example: '666666'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: "string this is either 'verify' or 'reset'."
        required: false
        example: verify
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      code: '666666'
      type: verify
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/forgot
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Forgot Password Using Email/Phone.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reset_type:
        name: reset_type
        description: 'Must be at least 3 characters. Must not be greater than 191 characters.'
        required: true
        example: m
        type: string
        enumValues:
          - whatsapp_send
          - whatsapp_receive
          - mail_url
          - mail_otp
          - sms
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      reset_type: m
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/change_password
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Change Password.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'string new Password of User.'
        required: false
        example: password
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      reset_token:
        name: reset_token
        description: 'when not logged in Reset token of user.'
        required: false
        example: AAAA-BBBB-CCCC
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      firebase_token:
        name: firebase_token
        description: 'string Firebase token to verify this request.'
        required: false
        example: AAAA-BBBB-CCCC
        type: 'required_without:reset_token'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'when not logged in string Email of User.'
        required: false
        example: User@AQuadic.com
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'when not logged in  string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'when not logged in string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      current_password:
        name: current_password
        description: 'when loggedin only string Password of User.'
        required: false
        example: password
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'string new Password of User.'
        required: false
        example: password
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      password: password
      reset_token: AAAA-BBBB-CCCC
      firebase_token: AAAA-BBBB-CCCC
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      current_password: password
      password_confirmation: password
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/otp/cloudwa
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/otp/check
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/resend
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'resend Verification User Account.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      type:
        name: type
        description: 'string type of verify (verify or new).'
        required: false
        example: verify
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      verify_type:
        name: verify_type
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      type: verify
      verify_type: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/user
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Get Current User.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/logout
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: 'Logout from One Device or All'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      from_all:
        name: from_all
        description: 'If Exists will logout all devices.'
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      from_all: false
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/update
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'string Name User.'
        required: false
        example: 'AQuadic User'
        type: optional
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'string Email of User.'
        required: false
        example: User@AQuadic.com
        type: sometimes
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: 'string Phone Number of User.'
        required: false
        example: '01101782890'
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone_country:
        name: phone_country
        description: 'string Phone Country of User.'
        required: false
        example: EG
        type: required
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 5000 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      city_id:
        name: city_id
        description: 'The <code>id</code> of an existing record in the cities table. Must be at least 0 characters.'
        required: false
        example: ipojsausgioglrbchgsrzyhcttw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      country_id:
        name: country_id
        description: 'The <code>id</code> of an existing record in the countries table. Must be at least 0 characters.'
        required: false
        example: bkmkftmgosgtvnbobmzezcrcval
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      language:
        name: language
        description: ''
        required: false
        example: en
        type: string
        enumValues:
          - ar
          - en
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'AQuadic User'
      email: User@AQuadic.com
      phone: '01101782890'
      phone_country: EG
      city_id: ipojsausgioglrbchgsrzyhcttw
      country_id: bkmkftmgosgtvnbobmzezcrcval
      language: en
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/user/destroy
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Authorization
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
