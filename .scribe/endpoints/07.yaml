name: 'Broadcast Notifications'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/broadcast_notifications
    metadata:
      groupName: 'Broadcast Notifications'
      groupDescription: ''
      subgroup: Administration
      subgroupDescription: ''
      title: 'Get All Broadcasted Notifications.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Search for name'
        required: false
        example: hello
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      pagination:
        name: pagination
        description: simple/normal/none.
        required: false
        example: simple
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Count of items max(50).'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      from_date:
        name: from_date
        description: 'date Starting date of creation date.'
        required: false
        example: '2024-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      to_date:
        name: to_date
        description: 'date Ending date of creation date.'
        required: false
        example: '2029-01-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: hello
      pagination: simple
      per_page: 50
      from_date: '2024-01-01'
      to_date: '2029-01-01'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/broadcast_notifications
    metadata:
      groupName: 'Broadcast Notifications'
      groupDescription: ''
      subgroup: Administration
      subgroupDescription: ''
      title: 'Create Broadcast Notification.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: 'Multilingual title. Must include at least the current app locale.'
        required: true
        example:
          ar: اختبار
          en: test
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      body:
        name: body
        description: 'Multilingual body. Must include at least the current app locale.'
        required: true
        example:
          ar: اختبار
          en: test
        type: object
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'file optional Notification image (jpg, png, max 2MB).'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      type:
        name: type
        description: 'Broadcast type. One of: `all`, `selected`.'
        required: true
        example: '"all"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      notifiable_ids:
        name: notifiable_ids
        description: 'if type=selected List of user IDs to notify.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country_id:
        name: country_id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      title:
        ar: اختبار
        en: test
      body:
        ar: اختبار
        en: test
      image: architecto
      type: '"all"'
      notifiable_ids:
        - 1
        - 2
        - 3
      country_id: 1
    bodyParameters:
      type:
        name: type
        description: ''
        required: false
        example: all
        type: string
        enumValues:
          - all
          - selected
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notifiable_ids:
        name: notifiable_ids
        description: 'This field is required when <code>type</code> is <code>selected</code>.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      country_id:
        name: country_id
        description: 'The <code>id</code> of an existing record in the countries table.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      type: all
      country_id: 16
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/broadcast_notifications/{broadcast_notification_id}'
    metadata:
      groupName: 'Broadcast Notifications'
      groupDescription: ''
      subgroup: Administration
      subgroupDescription: ''
      title: 'Get Broadcasted Notification.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      broadcast_notification_id:
        name: broadcast_notification_id
        description: 'The ID of the broadcast notification.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      broadcast_notification_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/broadcast_notifications/{broadcast_notification_id}'
    metadata:
      groupName: 'Broadcast Notifications'
      groupDescription: ''
      subgroup: Administration
      subgroupDescription: ''
      title: 'Delete Broadcasted Notification.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      broadcast_notification_id:
        name: broadcast_notification_id
        description: 'The ID of the broadcast notification.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      broadcast_notification_id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
